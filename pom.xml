<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <groupId>info.maila</groupId>
    <artifactId>pdfa</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>pdfa</name>
    <description>pdfa</description>

    <packaging>jar</packaging>

    <scm>
        <developerConnection>scm:git:https://github.com/jeschu/spring-template.git</developerConnection>
        <url>https://github.com/jeschu/spring-template</url>
    </scm>

    <properties>
        <springboot-template-api.version>1.0.0-SNAPSHOT</springboot-template-api.version>

        <java.version>11</java.version>
        <kotlin.version>1.5.31</kotlin.version>

        <springfox-swagger2.version>2.9.2</springfox-swagger2.version>

        <kotlin-logging.version>1.11.5</kotlin-logging.version>
        <logstash-logback-encoder.version>6.3</logstash-logback-encoder.version>

        <spring-boot-admin-starter-client.version>2.1.6</spring-boot-admin-starter-client.version>

        <docker.registryUrl>docker-registry.webtravel.de</docker.registryUrl>
        <jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>
        <docker-maven-plugin.version>0.33.0</docker-maven-plugin.version>
        <micrometer.version>1.3.3</micrometer.version>
    </properties>

    <dependencies>
        <!-- <editor-fold desc="WEB APPLICATION Dependencies"> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="SWAGGER Dependencies"> -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="DEVOPS Dependencies"> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="JSON LOGGING Dependencies"> -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>
        <!-- wird für if condition in logback.xml Konfigurationen benötigt -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="KOTLIN Dependencies"> -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>kotlin-stdlib-common</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging</artifactId>
            <version>${kotlin-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>kotlin-stdlib-common</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="JAVA Dependencies"> -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="TEST Dependencies"> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="DEVELOPMENT Dependencies"> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="SPRING-BOOT-ADMIN Dependencies"> -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${spring-boot-admin-starter-client.version}</version>
        </dependency>
        <!-- </editor-fold> -->

        <!-- <editor-fold desc="Metrics"> -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer.version}</version>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-graphite</artifactId>
            <version>${micrometer.version}</version>
        </dependency>
        <!-- </editor-fold> -->

    </dependencies>

    <build>

        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>build-info</id>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                        <!--
                          Diese execution sorgt dafür, dass 2 Jars generiert werden
                             1. das Standard Jar
                             2. ein executable Jar, welches zusätzlich alle Abhängigkeiten enthält.

                          Das 1. wird als Dependency springboot-template-client benötigt um die Integrationstest ausführen zu können,
                          das 2. wird im DockerImage verwendet.
                        -->
                        <execution>
                            <id>repackage</id>
                            <configuration>
                                <classifier>exec</classifier>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>3.0.1</version> <!-- 4.9.10 -->
                    <configuration>
                        <excludeProperties>
                            <excludeProperty>git.build.user.email</excludeProperty>
                            <excludeProperty>git.commit.user.email</excludeProperty>
                            <excludeProperty>git.remote.origin.url</excludeProperty>
                        </excludeProperties>
                        <verbose>false</verbose>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>external.atlassian.jgitflow</groupId>
                    <artifactId>jgitflow-maven-plugin</artifactId>
                    <version>${jgitflow-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <args>
                            <arg>-Xjsr305=strict</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                        </compilerPlugins>
                    </configuration>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <jvmTarget>1.8</jvmTarget>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <jvmTarget>1.8</jvmTarget>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/test/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-noarg</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>testCompile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- Documentation see -> https://dmp.fabric8.io/ -->
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>build-docker-image</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push-versioned-docker-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <images>
                                    <image>
                                        <name>%a:%v</name>
                                    </image>
                                </images>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <useColor>true</useColor>
                        <verbose>true</verbose>
                        <registry>docker-registry.webtravel.de</registry>
                        <images>
                            <image>
                                <name>%a:%v</name>
                                <build>
                                    <dockerFile>${project.basedir}/src/docker/Dockerfile</dockerFile>
                                    <assembly>
                                        <inline xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/3.2.0" xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/3.2.0 http://maven.apache.org/xsd/assembly-3.2.0.xsd">
                                            <files>
                                                <file>
                                                    <source>${project.build.directory}/${project.build.finalName}-exec.${project.packaging}</source>
                                                </file>
                                                <file>
                                                    <source>${project.basedir}/src/docker/entrypoint.sh</source>
                                                </file>
                                            </files>
                                        </inline>
                                    </assembly>
                                </build>
                                <!--<run>
                                    <ports>
                                        <port>9090:9090</port>
                                    </ports>
                                </run> --><!-- For testing purposes, if you want to start the container via mvn docker:start and like to access the ui -->
                            </image>
                        </images>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <configuration>
                    <enableSshAgent>true</enableSshAgent>
                    <allowSnapshots>false</allowSnapshots>
                    <pushReleases>true</pushReleases>
                    <pushFeatures>true</pushFeatures>
                    <pushHotfixes>true</pushHotfixes>
                    <noDeploy>true</noDeploy>
                    <flowInitContext>
                        <masterBranchName>main</masterBranchName>
                        <developBranchName>develop</developBranchName>
                        <featureBranchPrefix>feature/</featureBranchPrefix>
                        <releaseBranchPrefix>release/</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                        <versionTagPrefix>v</versionTagPrefix>
                    </flowInitContext>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludeResources>true</excludeResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <!--suppress MavenModelInspection -->
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <ciManagement>
        <system>Jenkins</system>
        <url>https://ci.webtravel.de</url>
    </ciManagement>

    <organization>
        <name>Bewotec Software Entwicklungs- und Vertriebs GmbH</name>
        <url>http://www.bewotec.de</url>
    </organization>

</project>
